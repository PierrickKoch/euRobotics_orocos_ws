# Import libraries
import("rtt_tf")
import("calculateDistanceToWall")

# Create the components we need
loadComponent("CalculateDistanceToWall","CalculateDistanceToWall")
loadComponent("rtt_tf","rtt_tf::RTT_TF")

# Set the components activity

# Load services. The marshalling services allows to load and store properties
# from / to xml file format.
loadService("CalculateDistanceToWall","marshalling")

#add peers
addPeer("CalculateDistanceToWall","rtt_tf")

# Connect peers. In order to exchange data between components, they need to be
# neighbours or peers of each other
connectPeers("CalculateDistanceToWall","rtt_tf")

# Create connections. The peers are defined, so we can now connect the
# appropriate input and output ports with each other in order to allow data flow
# between the components
var ConnPolicy cp
cp.transport = 3
cp.name_id = "scan"
stream("CalculateDistanceToWall.LaserScan",cp)
cp.transport = 3
cp.name_id = "meas"
stream("CalculateDistanceToWall.DistanceToWall",cp)
cp.transport = 3

rtt_tf.configure()
CalculateDistanceToWall.configure()

rtt_tf.start()
#CalculateDistanceToWall.start()
